**<Task Description>**
As a temporal logic analysis expert, your task is to convert natural language sentences into corresponding Linear Temporal Logic (LTL) expressions. Your analysis should focus on the following aspects:
1. Identifying temporal relationships, including explicit and implicit temporal keywords.
2. Extracting atomic propositions, clarifying events and their states.
3. Analyzing the temporal logic relationships between atomic propositions.
4. Verifying the rationality of the logical structure, ensuring the LTL formula accurately reflects the temporal constraints in the sentence.

**<Output Format Specification>**
Regardless of the input content, the final output must follow the format below:
```LTL formula corresponding to the input text```
Note: The LTL formula should include atomic propositions and LTL operators, and the final output must be wrapped in three backticks and in a line.

**<Linear Temporal Logic Knowledge Base>**
Remember that LTL Operators and Symbols to Use:
- Temporal operators: X (next), U (until), G (globally), F (finally), GF (infinitely often)
- Logical operators: | (or), & (and), ! (not), -> (implies), <-> (bi-conditional)

Ensure the LTL formula only contains the atomic propositions and the operators mentioned above. Atomic statements must use propositional symbols, and direct embedding in mathematical expressions is prohibited.

**I. Explicit Temporal Keywords Dictionary**
1. **Temporal Operator Mapping**:
   - **Before/After**: φ₁ → ◯φ₂ (next state)
   - **Until**: φ₁ U φ₂
   - **Followed by**: φ₁ → ◯φ₂
   - **When/Whenever**: G(φ₁ → φ₂) (global constraint)
   - **Once**: F(φ) (finally operator)
2. **Temporal Adverb Dictionary**:
   - **Immediacy**: immediately, right after
   - **Continuity**: always, continuously
   - **Finality**: eventually, finally

**II. Implicit Temporal Feature Patterns**
1. **Event Sequence Patterns**:
   - **Phase Action Chain**: "After completing A, perform B, and finally C"
   - **Condition Trigger Chain**: "When X happens, start Y process"
2. **Time Constraint Patterns**:
   - **Deadline**: "Must respond within T time"
   - **Cycle Requirement**: "Check every N seconds"

**III. Some LTL Operator Natural Language Correspondences**
1. **LTL Operator**: G(φ)
   - Natural language pattern: "Always"/"Always satisfied"
   - Example: "The system must always log the events"
2. **LTL Operator**: F(φ)
   - Natural language pattern: "Must eventually"/"Will happen eventually"
   - Example: "The error will eventually be handled"
3. **LTL Operator**: X(φ)
   - Natural language pattern: "Execute immediately"/"Next state"
   - Example: "Respond immediately after receiving the signal"
4. **LTL Operator**: φ₁ U φ₂
   - Natural language pattern: "Stay until"/"Keep until..."
   - Example: "Remain on alert until the deactivation command"

[Examples]
**<Execution Requirements>**
1. **Analysis in Four Steps**:
   - **Sentence Decomposition**: Break the sentence into simplified clauses, clarifying events, conditions, temporal relationships, etc.
   - **Keyword Identification**: Identify temporal keywords (such as "before", "globally", "whenever", etc.) and their logical relations.
   - **Atomic Proposition Extraction**: Extract specific atomic propositions, ensuring they accurately reflect the events and their states.
   - **Logical Structure Verification**: Validate that the temporal logic extracted is consistent, and confirm whether the LTL operators apply.
2. **Simplification and Optimization**:
   When converting to LTL formula, avoid redundant operators and ensure the formula is concise and accurate.

---

<Question>
Input Text: [INPUT TEXT]
Analysis Process:
Let's think step by step.